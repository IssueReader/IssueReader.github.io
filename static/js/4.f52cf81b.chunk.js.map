{"version":3,"sources":["routes/Profile/index.js","routes/Profile/index.module.less"],"names":["Profile","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","selected","undefined","loading","setState","item","_services_localForage__WEBPACK_IMPORTED_MODULE_23__","updateRepo","owner","repo","team","filterAuthor","dispatch","type","syncRepoInfo","antd_lib_notification__WEBPACK_IMPORTED_MODULE_18___default","a","success","message","description","_this2","react__WEBPACK_IMPORTED_MODULE_19___default","createElement","Fragment","ant_design_pro_lib_PageHeader__WEBPACK_IMPORTED_MODULE_21___default","logo","userInfo","alt","src","avatarUrl","title","name","content","login","bio","action","antd_lib_button__WEBPACK_IMPORTED_MODULE_13___default","onClick","antd_lib_modal__WEBPACK_IMPORTED_MODULE_15___default","alert","breadcrumbList","_components_PageBody__WEBPACK_IMPORTED_MODULE_22__","antd_lib_card__WEBPACK_IMPORTED_MODULE_3___default","bordered","antd_lib_table__WEBPACK_IMPORTED_MODULE_5___default","columns","key","render","text","antd_lib_avatar__WEBPACK_IMPORTED_MODULE_11___default","user","dataIndex","value","className","_index_module_less__WEBPACK_IMPORTED_MODULE_24___default","highlight","muted","antd_lib_icon__WEBPACK_IMPORTED_MODULE_9___default","showModal","antd_lib_divider__WEBPACK_IMPORTED_MODULE_7___default","href","concat","target","dataSource","repos","pagination","rowKey","record","visible","maskClosable","confirmLoading","onOk","onCancel","hideModal","antd_lib_checkbox__WEBPACK_IMPORTED_MODULE_1___default","onChange","e","checked","PureComponent","__webpack_exports__","Object","dva__WEBPACK_IMPORTED_MODULE_20__","app","module","exports","italic","ellipsis","ponter"],"mappings":"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","file":"static/js/4.f52cf81b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'dva';\r\nimport { Table, Button, Card, Avatar, Modal, Divider, Icon, Checkbox, notification } from 'antd';\r\nimport PageHeader from 'ant-design-pro/lib/PageHeader';\r\nimport PageBody from '../../components/PageBody';\r\nimport localForageService from '../../services/localForage';\r\nimport styles from './index.module.less';\r\n\r\n\r\nclass Profile extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: undefined,\r\n      loading: false,\r\n    };\r\n  }\r\n  componentWillUnmount() {\r\n    this.setState({ selected: undefined, loading: false });\r\n  }\r\n  showModal(item) {\r\n    if (this.state.selected || this.state.loading) {\r\n      return;\r\n    }\r\n    this.setState({ selected: { ...item } });\r\n  }\r\n  hideModal() {\r\n    if (this.state.loading) {\r\n      return;\r\n    }\r\n    this.setState({ selected: undefined });\r\n  }\r\n  async updateRepo() {\r\n    if (this.state.loading) {\r\n      return;\r\n    }\r\n    this.setState({ loading: true });\r\n    await localForageService.updateRepo({\r\n      owner: this.state.selected.owner,\r\n      repo: this.state.selected.repo,\r\n      team: this.state.selected.team,\r\n      filterAuthor: this.state.selected.filterAuthor,\r\n    });\r\n    this.props.dispatch({ type: 'app/updateRepos' });\r\n    await localForageService.syncRepoInfo(this.state.selected);\r\n    if (!this.state.loading) {\r\n      return;\r\n    }\r\n    notification.success({ message: '保存成功', description: '' });\r\n    this.setState({ selected: undefined, loading: false });\r\n  }\r\n  render() {\r\n    return (<React.Fragment>\r\n      <PageHeader\r\n        logo={this.props.userInfo && <img alt=\"\" src={this.props.userInfo.avatarUrl} />}\r\n        title={this.props.userInfo.name}\r\n        content={this.props.userInfo && <div>\r\n          <div>{this.props.userInfo.login}</div>\r\n          <div>{this.props.userInfo.bio}</div>\r\n        </div>}\r\n        action={<Button type=\"primary\" onClick={() => Modal.alert({ message: '暂不支持同步配置文件功能' })}>同步</Button>}\r\n        breadcrumbList={[{ title: null }]}\r\n      />\r\n      <PageBody>\r\n        <Card bordered={false}>\r\n          <Table\r\n            columns={[{\r\n              title: '博主',\r\n              key: 'owner',\r\n              render: (text, item) => (\r\n                <span>\r\n                  <Avatar src={item.user && item.user.avatarUrl} />\r\n                  &nbsp;&nbsp;{item.owner}\r\n                  {item.user && item.user.name && <span>（{item.user.name}）</span>}\r\n                </span>\r\n              ),\r\n            }, {\r\n              title: 'Github 仓库',\r\n              dataIndex: 'repo',\r\n              key: 'repo',\r\n            }, {\r\n              title: '文章数',\r\n              dataIndex: 'totalCount',\r\n              key: 'totalCount',\r\n            }, {\r\n              title: '团队博客',\r\n              dataIndex: 'team',\r\n              key: 'team',\r\n              render: (value) => (value ? <span className={styles.highlight}>是</span> : <span className={styles.muted}>否</span>),\r\n            }, {\r\n              title: '过滤作者',\r\n              dataIndex: 'filterAuthor',\r\n              key: 'filterAuthor',\r\n              render: (value) => (false === value ? <span className={styles.highlight}>否</span> : <span className={styles.muted}>是</span>),\r\n            }, {\r\n              title: '操作',\r\n              key: 'action',\r\n              render: (text, item) => (<React.Fragment>\r\n                <Icon type=\"setting\" onClick={() => this.showModal(item)} />\r\n                <Divider type=\"vertical\" />\r\n                <a href={`https://github.com/${item.owner}/${item.repo}/issues`} target=\"_blink\">\r\n                  <Icon type=\"export\" />\r\n                </a>\r\n              </React.Fragment>),\r\n            }]}\r\n            dataSource={this.props.repos}\r\n            pagination={false}\r\n            rowKey={record => `${record.owner}/${record.repo}`}\r\n          />\r\n        </Card>\r\n      </PageBody>\r\n      {this.state.selected && <Modal\r\n        title={`${this.state.selected.owner}/${this.state.selected.repo}`}\r\n        visible\r\n        maskClosable={false}\r\n        confirmLoading={this.state.loading}\r\n        onOk={() => this.updateRepo()}\r\n        onCancel={() => this.hideModal()}\r\n      >\r\n        <p>\r\n          <Checkbox\r\n            onChange={(e) => this.setState({ selected: { ...this.state.selected, team: e.target.checked } })}\r\n            checked={true === this.state.selected.team}\r\n          >团队博客</Checkbox>\r\n        </p>\r\n        <p>\r\n          <Checkbox\r\n            onChange={(e) => this.setState({ selected: { ...this.state.selected, filterAuthor: e.target.checked } })}\r\n            checked={false !== this.state.selected.filterAuthor}\r\n          >过滤作者</Checkbox>\r\n        </p>\r\n      </Modal>}\r\n    </React.Fragment>);\r\n  }\r\n}\r\n\r\n\r\nProfile.propTypes = {\r\n  userInfo: PropTypes.object,\r\n  repos: PropTypes.array,\r\n};\r\n\r\nexport default connect(state => ({\r\n  userInfo: state.app.userInfo,\r\n  repos: state.app.repos,\r\n}))(Profile);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"italic\":\"index_italic__365TC\",\"ellipsis\":\"index_ellipsis__2nFVW\",\"ponter\":\"index_ponter__3AHud\",\"muted\":\"index_muted__2qJ0D\",\"highlight\":\"index_highlight__3MRep\"};"],"sourceRoot":""}