{"version":3,"sources":["models/favorites.js"],"names":["namespace","state","list","loading","total","undefined","page","pageSize","subscriptions","setup","_ref","dispatch","history","listen","_ref2","pathname","search","type","payload","effects","load","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_ref3","_ref4","call","put","select","parsed","_ref5","_ref6","data","wrap","_context","prev","next","query_string__WEBPACK_IMPORTED_MODULE_1___default","parse","parseInt","favorites","sent","abrupt","_services_localForage__WEBPACK_IMPORTED_MODULE_2__","getFavoriteIssues","stop","this","updateIssue","_ref7","_ref8","_ref9","index","issues","_context2","findIndex","it","owner","repo","number","_toConsumableArray","_objectSpread","reducers","save","action"],"mappings":"26BAWEA,UAAW,YAEXC,OACEC,QACAC,SAAS,EACTC,WAAOC,EACPC,KAAM,EACNC,SAAU,IAGZC,eACEC,MADa,SAAAC,GACgB,IAArBC,EAAqBD,EAArBC,SACN,OAD2BD,EAAXE,QACDC,OAAO,SAAAC,GAA0B,IAAvBC,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,OACjC,GAAI,eAAiBD,EACnB,OAAOJ,GAAWM,KAAM,OAAQC,SAAWF,gBAMnDG,SACGC,KADMC,EAAAC,EAAAC,KAAA,SAAAH,EAAAI,EAAAC,GAAA,IAAAP,EAAAQ,EAAAC,EAAAC,EAAAC,EAAAvB,EAAAwB,EAAAvB,EAAAwB,EAAAC,EAAA,OAAAX,EAAAC,EAAAW,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIyB,OAHxBlB,EADDM,EACCN,QAAaQ,EADdD,EACcC,KAAMC,EADpBF,EACoBE,IAAKC,EADzBH,EACyBG,OACxBC,EAASQ,EAAAf,EAAYgB,MAAMpB,EAAQF,QACnCV,EAAOiC,SAASV,EAAOvB,MAAQ,EAAG,IAHnC4B,EAAAE,KAAA,EAI+BR,EAAO,SAAA3B,GAAA,OAASA,EAAMuC,YAJrD,UAAAV,EAAAI,EAAAO,KAIGlC,EAJHuB,EAIGvB,UAJHuB,EAIa3B,QAJb,CAAA+B,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,kBAQL,OARKR,EAAAE,KAAA,GAQCT,GAAMV,KAAM,OAAQC,SAAWhB,QAAUC,SAAS,EAAMG,UARzD,QASY,OATZ4B,EAAAE,KAAA,GASkBV,EAAKiB,EAAA,EAAmBC,mBAAoBtC,EAAO,GAAKC,EAAUA,GATpF,QAUL,OAVKwB,EAAAG,EAAAO,KASGT,EATHD,EASGC,KATHE,EAAAE,KAAA,GAUCT,GAAMV,KAAM,OAAQC,SAAWf,SAAS,EAAOD,KAAO8B,GAAQA,EAAK9B,MAAS,KAAME,MAAO4B,GAAQA,EAAK5B,SAVvG,yBAAA8B,EAAAW,SAAAzB,EAAA0B,QAYNC,YAZM1B,EAAAC,EAAAC,KAAA,SAAAwB,EAAAC,EAAAC,GAAA,IAAA/B,EAAAS,EAAAD,EAAAE,EAAAsB,EAAAhD,EAAAiD,EAAAC,EAAA,OAAA/B,EAAAC,EAAAW,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OAaL,OADalB,EAZR8B,EAYQ9B,QAAaS,EAZrBsB,EAYqBtB,IAAKD,EAZ1BuB,EAY0BvB,KAAME,EAZhCqB,EAYgCrB,OAZhCyB,EAAAjB,KAAA,EAaCV,EAAKiB,EAAA,EAAmBI,YAAa7B,GAbtC,OAcY,OAdZmC,EAAAjB,KAAA,EAckBR,EAAO,SAAA3B,GAAA,OAASA,EAAMuC,YAdxC,UAAAU,EAAAG,EAAAZ,KAcGvC,EAdHgD,EAcGhD,MAEH,KADCiD,EAAQjD,EAAKoD,UAAU,SAAAC,GAAA,OAAMA,EAAGC,QAAUtC,EAAQsC,OAASD,EAAGE,OAASvC,EAAQuC,MAAQF,EAAGG,SAAWxC,EAAQwC,UAf9G,CAAAL,EAAAjB,KAAA,SAmBH,OAFMgB,EAjBHO,EAiBgBzD,IACZiD,GAAPS,KAAqBR,EAAOD,GAAWjC,GAlBpCmC,EAAAjB,KAAA,GAmBGT,GAAMV,KAAM,OAAQC,SAAWhB,KAAMkD,KAnBxC,yBAAAC,EAAAR,SAAAE,EAAAD,SAwBTe,UACEC,KADQ,SACH7D,EAAO8D,GACV,OAAAH,KAAY3D,EAAU8D,EAAO7C","file":"static/js/9.e21195a7.chunk.js","sourcesContent":["// import React from 'react';\n// import { routerRedux } from 'dva/router';\n// import queryString from 'query-string';\n// import { notification } from 'antd';\nimport queryString from 'query-string';\nimport localForageService from '../services/localForage';\n// import userServices from '../services/user';\n\n\nexport default {\n\n  namespace: 'favorites',\n\n  state: {\n    list: [],\n    loading: false,\n    total: undefined,\n    page: 1,\n    pageSize: 20,\n  },\n\n  subscriptions: {\n    setup({ dispatch, history }) {\n      return history.listen(({ pathname, search }) => {\n        if ('/favorites' === pathname) {\n          return dispatch({ type: 'load', payload: { search } });\n        }\n      });\n    },\n  },\n\n  effects: {\n    *load({ payload }, { call, put, select }) {\n      const parsed = queryString.parse(payload.search);\n      const page = parseInt(parsed.page || 1, 10);\n      const { pageSize, loading } = yield select(state => state.favorites);\n      if (loading) {\n        return;\n      }\n      yield put({ type: 'save', payload: { list: [], loading: true, page } });\n      const { data } = yield call(localForageService.getFavoriteIssues, (page - 1) * pageSize, pageSize);\n      yield put({ type: 'save', payload: { loading: false, list: (data && data.list) || null, total: data && data.total } });\n    },\n    *updateIssue({ payload }, { put, call, select }) {  // eslint-disable-line\n      yield call(localForageService.updateIssue, payload);\n      const { list } = yield select(state => state.favorites);\n      const index = list.findIndex(it => it.owner === payload.owner && it.repo === payload.repo && it.number === payload.number);\n      if (-1 !== index) {\n        const issues = [...list];\n        issues[index] = { ...issues[index], ...payload };\n        yield put({ type: 'save', payload: { list: issues } });\n      }\n    },\n  },\n\n  reducers: {\n    save(state, action) {\n      return { ...state, ...action.payload };\n    },\n  },\n\n};\n"],"sourceRoot":""}