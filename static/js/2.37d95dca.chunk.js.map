{"version":3,"sources":["routes/Watching/index.js","routes/Watching/index.module.less"],"names":["Watching","props","_this","_classCallCheck","this","_getPrototypeOf","call","load","bind","_assertThisInitialized","subscribe","unsubscribe","dispatch","type","e","record","loading","payload","owner","repo","_this2","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","Fragment","ant_design_pro_lib_PageHeader__WEBPACK_IMPORTED_MODULE_11___default","title","action","antd_lib_button__WEBPACK_IMPORTED_MODULE_7___default","onClick","disabled","breadcrumbList","className","_index_module_less__WEBPACK_IMPORTED_MODULE_12___default","container","antd_lib_card__WEBPACK_IMPORTED_MODULE_1___default","bordered","antd_lib_table__WEBPACK_IMPORTED_MODULE_3___default","columns","key","render","text","antd_lib_avatar__WEBPACK_IMPORTED_MODULE_5___default","src","avatarUrl","dataIndex","watch","dataSource","list","pagination","rowKey","concat","PureComponent","__webpack_exports__","Object","dva__WEBPACK_IMPORTED_MODULE_10__","state","watching","module","exports","italic","ellipsis","ponter"],"mappings":"2uCASMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,MAAA,mGAAAC,CAAAC,KAAAJ,KACjBI,MAAAF,MAAAG,EAAAL,GAAAM,KAAAF,KAAMH,oDAIDM,KAAOL,EAAKK,KAAKC,KAAVC,IAAAP,KACZA,EAAKQ,UAAYR,EAAKQ,UAAUF,KAAfC,IAAAP,KACjBA,EAAKS,YAAcT,EAAKS,YAAYH,KAAjBC,IAAAP,KAPFA,4DAUjBE,KAAKH,MAAMW,UAAWC,KAAM,oEAEdC,EAAGC,uEACbA,EAAOC,yEAGLZ,KAAKH,MAAMW,UAAWC,KAAM,qBAAsBI,SAAWC,MAAOH,EAAOG,MAAOC,KAAMJ,EAAOI,wJAErFL,EAAGC,uEACfA,EAAOC,yEAGLZ,KAAKH,MAAMW,UAAWC,KAAM,uBAAwBI,SAAWC,MAAOH,EAAOG,MAAOC,KAAMJ,EAAOI,qIAGhG,IAAAC,EAAAhB,KAEP,OACEiB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACE,EAAAH,GACCI,MAAM,+CACNC,OAAQN,EAAAC,EAAAC,cAAAK,EAAAN,GAAQT,KAAK,UAAUgB,QAASzB,KAAKG,KAAMuB,SAAU1B,KAAKH,MAAMe,SAAhE,gBACRe,iBAAmBL,MAAO,SAE5BL,EAAAC,EAAAC,cAAA,OAAKS,UAAWC,EAAAX,EAAOY,WACrBb,EAAAC,EAAAC,cAAAY,EAAAb,GAAMc,UAAU,GACdf,EAAAC,EAAAC,cAAAc,EAAAf,GACEgB,UACEZ,MAAO,eACPa,IAAK,QACLC,OAAQ,SAACC,EAAM1B,GAAP,OACNM,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAAmB,EAAApB,GAAQqB,IAAK5B,EAAO6B,YADtB,WAEe7B,EAAOG,UAIxBQ,MAAO,sBACPmB,UAAW,OACXN,IAAK,SAELb,MAAO,qBACPmB,UAAW,aACXN,IAAK,eAELb,MAAO,oBACPmB,UAAW,YACXN,IAAK,cAELb,MAAO,2BACPmB,UAAW,aACXN,IAAK,eAELb,MAAO,eACPa,IAAK,SACLC,OAAQ,SAACC,EAAM1B,GAAP,OACNA,EAAO+B,MACLzB,EAAAC,EAAAC,cAAAK,EAAAN,GAAQN,QAASD,EAAOC,QAASa,QAAS,SAAAf,GAAA,OAAKM,EAAKT,YAAYG,EAAGC,KAAnE,gBACAM,EAAAC,EAAAC,cAAAK,EAAAN,GAAQT,KAAK,UAAUG,QAASD,EAAOC,QAASa,QAAS,SAAAf,GAAA,OAAKM,EAAKV,UAAUI,EAAGC,KAAhF,mBAGNgC,WAAY3C,KAAKH,MAAM+C,KACvBhC,QAASZ,KAAKH,MAAMe,QACpBiC,YAAY,EACZC,OAAQ,SAAAnC,GAAA,SAAAoC,OAAapC,EAAOG,MAApB,KAAAiC,OAA6BpC,EAAOI,wNA3EnCE,EAAAC,EAAM8B,eAyF7BC,EAAA,QAAeC,OAAAC,EAAA,QAAAD,CAAQ,SAAAE,GAAA,OAErBR,KAAMQ,EAAMC,SAAST,KACrBhC,QAASwC,EAAMC,SAASzC,UAH1B,CAIIhB,wBCrGJ0D,EAAAC,SAAkBC,OAAA,sBAAAC,SAAA,wBAAAC,OAAA,sBAAA5B,UAAA","file":"static/js/2.37d95dca.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'dva';\r\nimport { Table, Button, Card, Avatar } from 'antd';\r\nimport PageHeader from 'ant-design-pro/lib/PageHeader';\r\n// import userServices from '../../services/user';\r\nimport styles from './index.module.less';\r\n\r\n\r\nclass Watching extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = {\r\n    //   list: undefined,\r\n    // };\r\n    this.load = this.load.bind(this);\r\n    this.subscribe = this.subscribe.bind(this);\r\n    this.unsubscribe = this.unsubscribe.bind(this);\r\n  }\r\n  load() {\r\n    this.props.dispatch({ type: 'watching/load' });\r\n  }\r\n  async subscribe(e, record) {\r\n    if (record.loading) {\r\n      return;\r\n    }\r\n    await this.props.dispatch({ type: 'watching/subscribe', payload: { owner: record.owner, repo: record.repo } });\r\n  }\r\n  async unsubscribe(e, record) {\r\n    if (record.loading) {\r\n      return;\r\n    }\r\n    await this.props.dispatch({ type: 'watching/unsubscribe', payload: { owner: record.owner, repo: record.repo } });\r\n    // this.update(record, { loading: false, watch: !result });\r\n  }\r\n  render() {\r\n    // const columns = this.getColumns();\r\n    return (\r\n      <React.Fragment>\r\n        <PageHeader\r\n          title=\"我的 Github 关注列表\"\r\n          action={<Button type=\"primary\" onClick={this.load} disabled={this.props.loading}>刷新</Button>}\r\n          breadcrumbList={[{ title: null }]}\r\n        />\r\n        <div className={styles.container}>\r\n          <Card bordered={false}>\r\n            <Table\r\n              columns={[{\r\n                title: '博主',\r\n                key: 'owner',\r\n                render: (text, record) => (\r\n                  <span>\r\n                    <Avatar src={record.avatarUrl} />\r\n                    &nbsp;&nbsp;{record.owner}\r\n                  </span>\r\n                ),\r\n              }, {\r\n                title: 'Github 仓库',\r\n                dataIndex: 'repo',\r\n                key: 'repo',\r\n              }, {\r\n                title: '文章数',\r\n                dataIndex: 'issueCount',\r\n                key: 'issueCount',\r\n              }, {\r\n                title: 'star 人数',\r\n                dataIndex: 'starCount',\r\n                key: 'starCount',\r\n              }, {\r\n                title: '订阅人数',\r\n                dataIndex: 'watchCount',\r\n                key: 'watchCount',\r\n              }, {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text, record) => (\r\n                  record.watch ?\r\n                    <Button loading={record.loading} onClick={e => this.unsubscribe(e, record)}>退订</Button> :\r\n                    <Button type=\"primary\" loading={record.loading} onClick={e => this.subscribe(e, record)}>订阅</Button>\r\n                ),\r\n              }]}\r\n              dataSource={this.props.list}\r\n              loading={this.props.loading}\r\n              pagination={false}\r\n              rowKey={record => `${record.owner}/${record.repo}`}\r\n            />\r\n          </Card>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nWatching.propTypes = {\r\n  // repos: PropTypes.array,\r\n  dispatch: PropTypes.func,\r\n};\r\n\r\nexport default connect(state => ({\r\n  // repos: state.app.repos,\r\n  list: state.watching.list,\r\n  loading: state.watching.loading,\r\n}))(Watching);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"italic\":\"index_italic__18DEq\",\"ellipsis\":\"index_ellipsis__1aH_m\",\"ponter\":\"index_ponter__1P1Ty\",\"container\":\"index_container__2t_dh\"};"],"sourceRoot":""}