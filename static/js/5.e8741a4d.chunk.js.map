{"version":3,"sources":["routes/Repo/index.js"],"names":["Repo","props","_this","_classCallCheck","this","_getPrototypeOf","call","state","opened","undefined","toggle","bind","_assertThisInitialized","toggleFavorite","isOpened","item","setState","read","dispatch","type","payload","owner","repo","number","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","style","textAlign","marginTop","PureComponent","__webpack_exports__","Object","dva__WEBPACK_IMPORTED_MODULE_1__","repos","app"],"mappings":"i7BAcMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,MAAA,mGAAAC,CAAAC,KAAAJ,KACjBI,MAAAF,MAAAG,EAAAL,GAAAM,KAAAF,KAAMH,oDACDM,OACHC,YAAQC,GAEVP,EAAKQ,OAASR,EAAKQ,OAAOC,KAAZC,IAAAV,KACdA,EAAKW,eAAiBX,EAAKW,eAAeF,KAApBC,IAAAV,KACtBA,EAAKY,SAAWZ,EAAKY,SAASH,KAAdC,IAAAV,KAPCA,wDASZa,GACDX,KAAKU,SAASC,GAChBX,KAAKY,UAAWR,YAAQC,KAEnBM,EAAKE,MACRb,KAAKH,MAAMiB,UAAWC,KAAM,oBAAqBC,QAASL,IAE5DX,KAAKY,UAAWR,8UAAaO,6CAGlBA,GACbX,KAAKH,MAAMiB,UAAWC,KAAM,wBAAyBC,QAASL,qCAEvDA,GAAM,IACLP,EAAWJ,KAAKG,MAAhBC,OACR,OAAOA,GAAUO,GAAQP,EAAOa,QAAUN,EAAKM,OAASb,EAAOc,OAASP,EAAKO,MAAQd,EAAOe,SAAWR,EAAKQ,wCAG5G,OACEC,EAAAC,EAAAC,cAAA,MAAIC,OAASC,UAAW,SAAUC,UAAW,QAA7C,yQA7BaL,EAAAC,EAAMK,eAuCzBC,EAAA,QAAeC,OAAAC,EAAA,QAAAD,CAAQ,SAAAzB,GAAA,OACrB2B,MAAO3B,EAAM4B,IAAID,QADnB,CAGIlC","file":"static/js/5.e8741a4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'dva';\r\n// import moment from 'moment';\r\n// import { Button, Card, List } from 'antd';\r\n// import PageHeader from 'ant-design-pro/lib/PageHeader';\r\n// import { MarkdownPreview } from 'react-marked-markdown';\r\n// import Ellipsis from 'ant-design-pro/lib/Ellipsis';\r\n// import Loading from '../Loading';\r\n// import Issue from '../Issue';\r\n\r\n// import styles from './index.module.less';\r\n\r\n\r\nclass Repo extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      opened: undefined,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.toggleFavorite = this.toggleFavorite.bind(this);\r\n    this.isOpened = this.isOpened.bind(this);\r\n  }\r\n  toggle(item) {\r\n    if (this.isOpened(item)) {\r\n      this.setState({ opened: undefined });\r\n    } else {\r\n      if (!item.read) {\r\n        this.props.dispatch({ type: 'issues/markAsRead', payload: item });\r\n      }\r\n      this.setState({ opened: { ...item } });\r\n    }\r\n  }\r\n  toggleFavorite(item) {\r\n    this.props.dispatch({ type: 'issues/toggleFavorite', payload: item });\r\n  }\r\n  isOpened(item) {\r\n    const { opened } = this.state;\r\n    return opened && item && opened.owner === item.owner && opened.repo === item.repo && opened.number === item.number;\r\n  }\r\n  render() {\r\n    return (\r\n      <h1 style={{ textAlign: 'center', marginTop: '2em' }}>暂不支持，敬请期待...</h1>\r\n    );\r\n  }\r\n}\r\n\r\nRepo.propTypes = {\r\n  issues: PropTypes.array,\r\n  // dispatch: PropTypes.func,\r\n};\r\n\r\nexport default connect(state => ({\r\n  repos: state.app.repos,\r\n  // issues: state.repo.issues,\r\n}))(Repo);\r\n"],"sourceRoot":""}