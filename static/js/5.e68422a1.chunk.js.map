{"version":3,"sources":["routes/Repo/index.js","routes/Repo/index.module.less"],"names":["Repo","props","_this","_classCallCheck","this","_getPrototypeOf","call","state","loading","user","undefined","list","onRefresh","bind","_assertThisInitialized","updateIssue","setState","_services_localForage__WEBPACK_IMPORTED_MODULE_11__","getRepoInfo","owner","match","params","repo","data","info","index","findIndex","it","number","issues","_toConsumableArray","_objectSpread","dispatch","type","payload","dva_router__WEBPACK_IMPORTED_MODULE_7__","push","pathname","_this$state","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","ant_design_pro_lib_PageHeader__WEBPACK_IMPORTED_MODULE_8___default","logo","alt","src","avatarUrl","title","concat","content","name","bio","action","className","_index_module_less__WEBPACK_IMPORTED_MODULE_12___default","antd_lib_button__WEBPACK_IMPORTED_MODULE_3___default","disabled","onClick","unsubscribe","breadcrumbList","_components_PageBody__WEBPACK_IMPORTED_MODULE_9__","antd_lib_card__WEBPACK_IMPORTED_MODULE_1___default","bordered","_components_Issues__WEBPACK_IMPORTED_MODULE_10__","PureComponent","__webpack_exports__","Object","dva__WEBPACK_IMPORTED_MODULE_6__","repos","app","module","exports","italic","ellipsis","ponter","container","issue","body"],"mappings":"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","file":"static/js/5.e68422a1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'dva';\r\nimport { routerRedux } from 'dva/router';\r\nimport { Button, Card } from 'antd';\r\nimport PageHeader from 'ant-design-pro/lib/PageHeader';\r\nimport PageBody from '../../components/PageBody';\r\nimport Issues from '../../components/Issues';\r\nimport localForageService from '../../services/localForage';\r\n\r\n\r\n// import moment from 'moment';\r\n// import { Button, Card, List } from 'antd';\r\n// import PageHeader from 'ant-design-pro/lib/PageHeader';\r\n// import { MarkdownPreview } from 'react-marked-markdown';\r\n// import Ellipsis from 'ant-design-pro/lib/Ellipsis';\r\n// import Loading from '../Loading';\r\n// import Issue from '../Issue';\r\n\r\nimport styles from './index.module.less';\r\n\r\n\r\nclass Repo extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      user: undefined,\r\n      list: undefined,\r\n    };\r\n    this.onRefresh = this.onRefresh.bind(this);\r\n    this.updateIssue = this.updateIssue.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.onRefresh();\r\n  }\r\n  componentWillUnmount() {\r\n    this.setState({ loading: false });\r\n  }\r\n  async onRefresh() {\r\n    if (this.state.loading) {\r\n      return;\r\n    }\r\n    this.setState({ loading: true, user: undefined, list: undefined });\r\n    const { data } = await localForageService.getRepoInfo({\r\n      owner: this.props.match.params.owner,\r\n      repo: this.props.match.params.repo,\r\n    });\r\n    if (!this.state.loading) {\r\n      return;\r\n    }\r\n    this.setState({ loading: false, list: data && data.list, user: data && data.user });\r\n    // this.setState({ loading: false });\r\n    // if (data) {\r\n    //   const { list, ...info } = data;\r\n    //   this.setState({ info, list });\r\n    // } else {\r\n    //   this.setState({ info: null, list: null });\r\n    // }\r\n  }\r\n  async updateIssue(info) {\r\n    // debugger;\r\n    // this.props.dispatch({ type: 'all/updateIssue', payload: info });\r\n    await localForageService.updateIssue(info);\r\n    const list = this.state.list;\r\n    const index = list.findIndex(it => it.owner === info.owner && it.repo === info.repo && it.number === info.number);\r\n    if (-1 !== index) {\r\n      const issues = [...list];\r\n      issues[index] = { ...issues[index], ...info };\r\n      this.setState({ list: issues });\r\n    }\r\n  }\r\n  async unsubscribe() {\r\n    if (this.state.loading) {\r\n      return;\r\n    }\r\n    this.setState({ loading: true });\r\n    await this.props.dispatch({\r\n      type: 'app/unsubscribe',\r\n      payload: {\r\n        owner: this.props.match.params.owner,\r\n        repo: this.props.match.params.repo,\r\n      },\r\n    });\r\n    if (true !== this.state.loading) {\r\n      return;\r\n    }\r\n    this.setState({ loading: false });\r\n    this.props.dispatch(routerRedux.push({ pathname: '/all' }));\r\n  }\r\n  // isSubscribed() {\r\n  //   if (!this.props.repos) {\r\n  //     return false;\r\n  //   }\r\n  //   const params = this.props.match.params;\r\n  //   const index = this.props.repos.findIndex(it => it.owner === params.owner && it.repo === params.repo);\r\n  //   return (-1 !== index);\r\n  // }\r\n  render() {\r\n    const { user, list } = this.state;\r\n    // const subscribed = this.isSubscribed();\r\n    return (\r\n      <React.Fragment>\r\n        <PageHeader\r\n          logo={user && <img alt=\"\" src={user.avatarUrl} />}\r\n          title={`${this.props.match.params.owner}/${this.props.match.params.repo}`}\r\n          content={user && <div>\r\n            <div>{user.name}</div>\r\n            <div>{user.bio}</div>\r\n          </div>}\r\n          action={<div className={styles.title}>\r\n            {/* {(!subscribed) && <Button disabled={this.state.loading} type=\"primary\" onClick={this.subscribe}>订阅</Button>} */}\r\n            <Button disabled={this.state.loading} type=\"danger\" onClick={this.unsubscribe}>退订</Button>\r\n            <Button disabled={this.state.loading} onClick={this.onRefresh}>刷新</Button>\r\n          </div>}\r\n          breadcrumbList={[{ title: null }]}\r\n        />\r\n        <PageBody>\r\n          <Card bordered={false}>\r\n            <Issues list={list} loading={this.state.loading} updateIssue={this.updateIssue} />\r\n          </Card>\r\n        </PageBody>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nRepo.propTypes = {\r\n  issues: PropTypes.array,\r\n  // dispatch: PropTypes.func,\r\n};\r\n\r\nexport default connect(state => ({\r\n  repos: state.app.repos,\r\n  // issues: state.repo.issues,\r\n}))(Repo);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"italic\":\"index_italic__3mJ9N\",\"ellipsis\":\"index_ellipsis__1hmNH\",\"ponter\":\"index_ponter__1Pa-v\",\"container\":\"index_container__3-gIF\",\"list\":\"index_list__2LRA8\",\"user\":\"index_user__3z_Wy\",\"title\":\"index_title__1g0ZP\",\"issue\":\"index_issue__pWRg9\",\"body\":\"index_body__pPVWV\"};"],"sourceRoot":""}